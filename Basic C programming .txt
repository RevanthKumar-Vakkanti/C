19/06/2024

1. write a code for size of datatypes.

#include<stdio.h>
int main()
{
    char ch='k';
    printf("size of int = %u\n",sizeof(int));//4 
    printf("size of char = %u\n",sizeof(char));//1
    printf("size of float = %u\n",sizeof(float));//4
    printf("size of double = %u\n",sizeof(double));//8
    printf("size of 'a' = %u\n",sizeof('a'));//4
    printf("size of 45 = %u\n",sizeof(45));//4
    printf("size of 4.56 = %u\n",sizeof(4.56f));//4
    printf("size of 56789.090 = %u\n",sizeof(56789.090));//8
    printf("size of char var = %u\n",sizeof(ch));//1
    printf("size of short = %u\n",sizeof(short));//2
    printf("size of long = %u\n",sizeof(long));//4 or 8
    printf("size of long double = %u\n",sizeof(long double));//12 or 16
    return 0;
    
}

2. write a program to swap two numbers.
 
#include<stdio.h>
int main()
{
   int a=0, b=0;
   printf("enter the two values\n");
   scanf("a=%d b=%d",&a,&b);
   int temp;
   printf("before swapping a=%d b=%d\n",a,b);
   temp=a;
   a=b;
   b=temp;
   printf("after swapping a=%d b=%d\n",a,b);
   
   
  /*   a=a+b;
     b=a-b;
     a=a-b;
     printf("a=%d b=%d \n",a,b);*/
     return 0;
}

3. write a program to input a character and print its associate ascii numbers.
 
#include<stdio.h>
int main()
{
    char i;
    printf("enter the character\n");
    scanf("%c",&i);
    printf("The ascii value of %c is %d",i,i);
    return 0;
}


4.  write a program to input a ascii number and print its associate character.

#include<stdio.h>
int main()
{
    int i;
    printf("enter the value:\n");
    scanf("%d",&i);
    printf("The equivalent character of %d is %c",i,i);
    return 0;
}

5. Increment operator.

#include<stdio.h>
int main()
{
    int a=10;
    printf("%d\n",a);//10
    printf("%d\n",++a);//11
    printf("%d\n",a++);//11
    printf("%d\n",a++);//12
    printf("%d\n",++a);//14
    printf("%d\n",a++);//14
    printf("%d\n",a);//15
    return 0;
}

6. Decrement operator

#include <stdio.h>

int main()
{
    int a,b;
    printf("enter any one value");
    scanf("%d",&a);
    printf("%d\n",a--);
    printf("%d\n",a);
    printf("%d\n",--a);
    printf("%d\n",a--);
    printf("%d\n",a);
    return 0;
}


7.increment and decrement with and, or operators.

#include<stdio.h>
int main()
{
    int a,b,out;
    printf("enter the values:");
    scanf("%d %d",&a,&b);
    out= ++a && ++b;  or out = --a && --b;
    printf("a=%d b=%d out=%d",a,b,out);
    
 
    return 0;
}

8. write a program to implement a simple calculator using a arthematic operator.

#include<stdio.h>
int main()
{
    int a,b,add,sub,mul,divi,mod;
    printf("enter the values:");
    scanf("%d %d",&a,&b);
    add= a+b;
    sub= a-b;
    mul= a*b;
    divi= a/b;
    mod= a%b;
    printf("a=%d b=%d\n add=%d sub=%d mul=%d divi=%d mod=%d",a,b,add,sub,mul,divi,mod);
    return 0;
}

9.write a program to implement  all relational operators.

#include<stdio.h>
int main()
{
    int a,b,lt,le,gt,ge,eq,neq;
    printf("enter the values:");
    scanf("%d %d",&a,&b);
    lt= a<b;
    le= a<=b;
    gt= a>b;
    ge= a>=b;
    eq= a==b;
    neq= a!=b;
    printf("a=%d b=%d\n lt=%d le=%d gt=%d ge=%d eq=%d neq=%d",a,b,lt,le,gt,ge,eq,neq);
    return 0;
}


20/06/24

10.logical operators

#include <stdio.h>

int main()
{
    int a,b;
    printf("enter two values");
    scanf("%d,%d",&a,&b);
    printf("%d\n",a&&b);
    printf("%d\n",a||b);
    printf("%d\n",!a);
    return 0;
}

11.bitwise operators

#include <stdio.h>
int main()
{
    int a,b;
    printf("enter two values\n");
    scanf("%d,%d",&a,&b);
    printf("%x\n",a&b);
    printf("%x\n",a|b);
    printf("%x\n",!a);
    printf("%x\n",a^b);
    return 0;
}

12. write a program to swap using bitwise operators?

#include<stdio.h>
int main()
{
  int a,b;
  printf("enter the two value\n");
  scanf("%d %d",&a,&b);
  printf("before swapping a=%d b=%d\n",a,b);
  a=a^b;
  b=a^b;
  a=a^b;
  printf("After swapping a=%d b=%d \n",a,b);
  return 0;
}

13.swap two numbers by using airthematic operator

#include <stdio.h>
int main()
{
    int a=0,b=0;
    printf("enter two values\n");
    scanf("%d %d",&a,&b);
    printf("before swapping a=%d b=%d",a,b);
    a=a+b;
    b=a-b;
    a=a-b;
    printf("after swapping a=%d b=%d",a,b);
    return 0;
}

14. ternary operator- to find largest number b/w two number?

#include<stdio.h>
int main()
{
  int a,b;
  printf("enter the two value\n");
  scanf("%d %d",&a,&b);
  printf("%d  \n",a>b?a:b); or ( a>b printf("a=%d\n",a):printf("b=%d\n",b);  )
  return 0;
}

15.smallest elements b/w two numbers using ternary operator

#include <stdio.h>
int main()
{
    int a=0,b=0;
    printf("enter two values\n");
    scanf("%d %d",&a,&b);
   
    printf("%d\n",a<b?a:b);
    return 0;
}


16.count

#include <stdio.h>//count
int main()
{
    int num=1564,count=0;
    
    while (num!=0)
    {
        ++count;
        num=num/10;
    }
    printf("%d",count);
    return 0;
}


17. implicit

#include <stdio.h>
int main()
{
    int a=5;
    float b=2.0;
  
    printf("%f\n",a/b);

    return 0;
}

18. explicit

#include <stdio.h>
int main()
{
    int a=5;
    int b=2;
    float x= a/(float)b;
    printf("%f\n",x);
    return 0;
}

19. predefined functions

#include <stdio.h>
#include<stdlib.h>
#include<math.h>
int main()
{
    int num,a,b,c;
    printf("enter the num value:"); //4
    scanf("%d",&num);
    printf("num=%d\n",num);
    a=abs(num);//4
    b=sqrt(a);//4
    c=log(b);//0
    printf("a=%d b=%d c=%d\n",a,b,c);
    return 0;
}

20. left shift operator
 
#include<stdio.h>
int main()
{
  int c;
  c=-8<<2;// left shift
  printf("c=%x\n",c);
  return 0;
}

21. Right shift operator

#include<stdio.h>
int main()
{
  int c;
  c=-8>>2;// right shift
  printf("c=%x\n",c);
  return 0;
}

21/06/2024

22. if conditions even or odd.

#include <stdio.h>
int main()
{
    int num=0;
    printf("enter the number\n");
    scanf("%d",&num);
    if(num %2==0)
    {
        printf("even\n");
    }
    else
    {
        printf("odd\n");
    }
    return 0;
}
      or

#include <stdio.h>
int main()
{
    int num=0;
    printf("enter the number\n");
    scanf("%d",&num);
    if(num & 1)
    {
        printf("odd\n");
    }
    else
    {
        printf("even\n");
    }
    return 0;
}

23. Write a program to check the give number is positive, negative or zero.

#include <stdio.h>
int main()
{
    int num=0;
    printf("enter the number\n");
    scanf("%d",&num);
    if(num>0)
    {
        printf("positive\n");
    }
    else if(num<0)
    {
        printf("negative\n");
    }
    else if(num==0)
    {
        printf("zero\n");
    }
    return 0;
}

24. Write a program to input 3 sides of a triangle and print whether it is an equilateral, scalene or isosceles triangle.

#include <stdio.h>
#include<stdlib.h>
int main()
{
    int a=0,b=0,c=0;
    printf("enter the number\n");
    scanf("%d %d %d",&a,&b,&c);
    if (a == b && b == c && c == a)
    {
        printf("Equilateral Triangle");
    }
    else if (a == b || b == c || c == a)
    {
        printf("Isosceles Triangle");
    }
    else
    {
        printf("Scalene Triangle");
    }

    return 0;
}

25. find a area of circle (***)

#include <stdio.h>
int main()
{
    float r=0.0;
    float pi=3.14;
    printf("enter a number:");
    scanf("%f",&r);
    float area= (pi*r*r);
    printf("area= %f\n",area);
    return 0;
}

26. give number is perfect square or not.

#include <stdio.h>
#include<math.h>
int main()
{
    int num, sq;
    printf("Enter a number:");
    scanf("%d",&num);
    sq=sqrt(num);
    if(sq*sq==num)
    {
        printf("It is a perfect square\n");
    }
    else
    {
        printf("It is not a perfect square\n");
    }
    return 0;
}

27. simple calculations using switch case.

#include <stdio.h>
int main()
{
    int a=0,b=0;
    printf("enter a value for a and b:\n");
    scanf("%d %d",&a,&b);
    int num;
    printf("enter a number:\n");
    scanf("%d",&num);
    switch(num)
    {
        case 1: printf("add=%d\n",a+b);
        break;
        case 2: printf("sub=%d\n",a-b);
        break;
        case 3: printf("mul=%d\n",a*b);
        break;
        case 4: printf("div=%d\n",a/b);
        break;
        case 5: printf("mod=%d\n",a%b);
        break;
        default:printf("not match above case\n");
    }
    return 0;
}

28. Vowel and consonant by using switch case.

#include <stdio.h>
int main()
{
    char ch;
    printf("enter a charter:\n");
    scanf("%c",&ch);
    switch(ch)
    {
        case 'a':
        case 'e':
        case 'i':
        case 'o':
        case 'u':
        case 'A':
        case 'E':
        case 'I':
        case 'O':
        case 'U':
        case 1: printf("vowel\n");
        break;
       default: printf("consonant\n");
    }
    return 0;
}

29. Vowels and Consonants by using if conditions.

#include <stdio.h>
int main()
{
    char ch;
    printf("Enter a character:\n");
    scanf("%c", &ch);
    if (ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u' || ch == 'A' ||ch == 'E' || ch == 'I' || ch == 'O' || ch == 'U')
    {
        printf("Vowel\n");
    }
    else
    {
        printf("Consonant\n");
    }
    return 0;
}

30. upper case and lower case by using switch case.

#include <stdio.h>
int main()
{
    char ch;
    printf("enter a charter:\n");
    scanf("%c",&ch);
    switch(ch)
    {
        case 'a' ... 'z':printf("lower case\n");
        break;
        case 'A' ... 'Z':printf("upper case\n");
        break;
    }
    return 0;
}

31. upper and lower case by using if conditions.

#include <stdio.h>
int main()
{
    char ch;
    printf("Enter a character:\n");
    scanf("%c", &ch);
    if (ch >= 'a' && ch <= 'z')
    {
        printf("Lower case\n");
    }
    else if (ch >= 'A' && ch <= 'Z')
    {
        printf("Upper case\n");
    }
    else
    {
        printf("Character is not an alphabetic letter\n");
    }
    return 0;
}
 
32. given number is single digit, double digit or triple digit by using switch case.
 
#include <stdio.h>
int main()
{
    int a=0;
    printf("enter a value for a:\n");
    scanf("%d",&a);
    switch(a)
    {
        case 0 ... 9: printf("the number is single digit\n");
        break;
        case 10 ... 99: printf("double digit\n");
        break;
        case 100 ... 999: printf("triple\n");
        break;
        default:printf("not match above case\n");
    }
    return 0;
}

33. given number is single digit, double digit or triple digit by using if conditions.

#include <stdio.h>
int main()
{
    int a = 0;
    printf("Enter a value for a:\n");
    scanf("%d", &a);
    if (a >= 0 && a <= 9)
    {
        printf("The number is single digit\n");
    }
    else if (a >= 10 && a <= 99)
    {
        printf("Double digit\n");
    }
    else if (a >= 100 && a <= 999)
    {
        printf("Triple digit\n");
    }
    else
    {
        printf(" given number is not match \n");
    }
    return 0;
}

34. calendar code by using switch case.

#include<stdio.h>
int main()
{
int a;
printf("enter the number \n");
scanf("%d",&a);
switch(a)
{
    case 1:printf("jan\n");
    break;
    case 2:printf("feb\n");
    break;
    case 3:printf("mar\n");
    break;
    case 4:printf("apl\n");
    break;
    case 5:printf("may\n");
    break;
    default:printf("not a month\n");
}   
    return 0;
}

35. Factorial code.(***)

#include<stdio.h>
int main()
{
   int a=0,i,fact=1; // for while loop we can take i=1.
   printf("enter a number: \n");
   scanf("%d",&a);
   //do
   //while(i<=a)
   for(i=1;i<=a;i++)
   {
      fact=fact*i;
      //i++;
   }
   //while(i<=a);
   printf("%d\n",fact);
   return 0;
}

36. reverse number (***)

#include<stdio.h>
int main()
{
    int num,rem,rev=0;
    printf("Enter a number:\n");
    scanf("%d",&num);
    while(num!=0)
    {
        rem=num%10;
        rev=(rev*10)+rem;
        num=num/10;
    }
    printf("%d\n",rev);
    return 0;
}
 
n	n!=0	remainder	reverse

12345	true	5		0*10+5=5
1234 	true	4 		5*10+4=54
123	true	3 		54*10+3=543
12	true	2		543*10+2=5432
1	true	1		5432*10+1=54321
0	false 	-		loop terminates

37. palindrome or not. (***)

#include<stdio.h>
int main()
{
    int num,rem,rev=0;
    printf("Enter a number:\n");
    scanf("%d",&num);
    int a=num;
    while(num!=0)
    {
        rem=num%10;
        rev=(rev*10)+rem;
        num=num/10;
    }
    printf("reverse = %d\n",rev);
    if(a==rev)
    {
        printf("palindrom\n");
    }
    else
    {
        printf("not a palindrome\n");
    }
    return 0;
}

38. prime number in blw intervals (***)

#include<stdio.h>
int main()
{
    int a,b;
    printf("enter two numbers: ");
    scanf("%d%d",&a,&b);
    for(int i=a;i<b;i++)
    {
        int val=0;
        if(a<=1)
        {
            a++;
        }
       for(int i=2;i<=a/2;i++)
        {
            if(a%i==0)
            {
                val=1;
                break;
            }
        }
        if(val==0)
        printf("%d ",a);
        a++;
    }
}
       or
       
#include<stdio.h>
int main()
{
    int num1,num2,i,j,count;
    printf(" enter a two numbers: ");
    scanf("%d%d",&num1,&num2);
    for(i=num1;i<=num2;i++)
    {
        count=0;
        for(j=1;j<=i;j++)
        {
           if(i%j==0)
           {
             count++;
           }
        }
        if(count==2)
        {
           printf("%d\n",i);
        }
   }
   return 0; 
}
         or

#include<stdio.h>// in range ex. 10 - 2 3 5 7
int main()
{
  int num,i,j,count;
  printf(" enter a number: ");
  scanf("%d",&num);
  for(i=0;i<=num;i++)
  {
    count=0;
    for(j=1;j<=i;j++) 
    {
      if(i%j==0)
      {
        count++;
      }
    }
    if(count==2)
    {
      printf("%d\n",i);
    }
  }
return 0;
}

24/06/2024

39. write a program for GCD. (***)

#include<stdio.h>
int main()
{
  int n1,n2,gcd;
  printf(" enter a value of n1 and n2 : \n");
  scanf("%d %d", &n1,&n2);
  for(int i=1;i<=n1 && i<=n2; i++)
  {
     if(n1 % i ==0 && n2 % i ==0)
     
       gcd=i;
  }
   printf("G.C.D of %d and %d is %d \n", n1, n2, gcd);
  return 0;
}

25/06/2024

40. Armstrong num or not. (***)

#include<stdio.h>
#include<math.h>
int main()
{
    int num,rem,sum=0;
    printf("Enter a number:\n");
    scanf("%d",&num);
    int a=num;
    while(num!=0)
    {
        rem=num%10;
        sum+=rem*rem*rem;// pow(rem,3);
       // sum=sum+i;
        num=num/10;
    }
    printf("%d\n",sum);
   
    if(a==sum)
    {
      printf("arm\n");
    }
    else
    {
      printf("not arm\n");
    }
    return 0;
}
      or
//  for any digits    
#include<stdio.h>
#include<math.h>
int main()
{
    int num,count=0,rem,sum=0;
    scanf("%d",&num);
    int temp=num;
    int a=num;
    while(temp!=0)
    {
       while(num!=0)
       {
          num=num/10;
          count++;
       }
        //  printf("%d\n",count);
          rem=temp%10;
          sum+=pow(rem,count);
          temp=temp/10;
    }
      printf("%d\n",sum);
      if(a==sum)
      {
        printf(" It is a armstrong number"); 
      }
      else
      {
        printf(" It is not a armstrong number");
      }
      return 0;
}

40. greater among three number using conditional operator. 

#include<stdio.h>
#define MAX(a,b) ((a)>(b)?(a):(b))
#define MAX3(a,b,c) (MAX(MAX(a,b),c))

int main()
{
    int num1,num2,num3;
    scanf("%d%d%d",&num1,&num2,&num3);
    int max = MAX3(num1, num2, num3);
    printf("%d\n",max);
    return 0;3.
}
        or
#include <stdio.h>
int main()
{
    int a=0,b=0,c=0,great;
    printf("enter a three numbers:\n");
    scanf("%d%d%d",&a,&b,&c);
    great = ((a>b && a>c)?a:(b>c?b:c));
    printf(" This is the greatest number among three: %d", great);
    return 0;
}

41. greater among two number using conditional operator. 

#include<stdio.h>
#define MAX(a,b) ((a)>(b)?(a):(b))
int main()
{
    int num1,num2;
    scanf("%d%d",&num1,&num2);
    int max = MAX(num1, num2);
    printf("%d\n",max);
    return 0;
}
       or
#include <stdio.h>
int main()
{
    int a=0,b=0,great;
    printf("enter a three numbers:\n");
    scanf("%d%d",&a,&b);
    great = ((a>b?a:b));
    printf(" This is the greatest number among two: %d", great);
    return 0;
}

42. leap year (***)

#include <stdio.h>
int main()
{
    int num=0;
    printf("enter a year:\n");
    scanf("%d",&num);
    if(num%4==0 && (num%100!=0 || num%400==0))
    {
        printf("leap year\n");
    }
    else
    {
        printf("not leap year\n");
    }
  
}

43. leap year using conditional operator

#include <stdio.h>
int main()
{
    int year;
    printf("Enter a year: ");
    scanf("%d", &year);
    (year % 4 == 0 && (year % 100 != 0 || year % 400 == 0)) ? printf("%d is a leap year.\n", year) : printf("%d is not a leap year.\n", year);
    return 0;
}

44. given character is alphabet or not using conditional operator.

#include <stdio.h>
int main()
{
    int ch=0;
    printf("enter a character :\n");
    scanf("%c",&ch);
    (ch>='a' && ch<='z' || ch>='A' && ch<= 'Z') ? printf("alphabet\n"):printf("not a alphabet\n");
    return 0;
}

45. given character is alphabet or not using if operator.

#include <stdio.h>
int main()
{
    int ch=0;
    printf("enter a character :\n");
    scanf("%c",&ch);
    if(ch>='a' && ch<='z' || ch>='A' && ch<= 'Z')
    {
        printf("alphabet\n");
    }
    else
    {
        printf("not a alphabet\n");
    }
    return 0;
}

46. fibonacci 

#include<stdio.h>
int main()
{
    int a=0,b=1,c,num;
    printf("enter a number: ");
    scanf("%d",&num);
    printf("%d\n%d\n",a,b);
    c=a+b;
    while(c<=num)
    {
      a=b;
      b=c;
      c=a+b;
      printf("%d\n",c);//num=10 - 0,1,1,2,3,5,8,13.
    } 
     return 0;
}
       or
       
#include<stdio.h>
int main()
{
  int num,a=0,b=1;
  printf("Enter the number of terms: ");
  scanf("%d",&num);
  printf("Fibonacci series: %d\n%d\n",a,b);
  int c=a+b;
  for(int i=3;i<=num;i++)
  {
    printf("%d\n",c);//num=10 - 0,1,1,2,3,5,8,13,21,34
    a=b;
    b=c;
    c=a+b;
  }
  return 0;
}
        or
#include<stdio.h>
int main()
{
    int a=0,b=1,c=0,num,i;
    printf("enter a number: ");
    scanf("%d",&num);
    while(i<num)
    {
      printf("%d\n",a);//num=10 - 0,1,1,2,3,5,8,13,21,34
      c=a+b;
      a=b;
      b=c;
      i++;
    } 
     return 0;
}
  
    or

#include<stdio.h> // in b/w range.
int main()
{
  int min,max,f0=0,f1=1,f2=0;
  printf(" enter the value of min: \n");
  scanf("%d",&min);
  printf("enter the value of max: \n");
  scanf("%d",&max);
  printf("Fibonacci seris %d and %d is ", min,max);
  
  if(f0 >= min && f0 <= max)
  {
    printf("%d\n",f0);
  }
  if(f1 >= min && f1 <= max)
  {
    printf("%d\n",f1);
  }
  f2 = f0 + f1;
  
  while( f2 <= max)
  {
    if(f2 >= min)
    {
      printf("%d\n",f2);
    }
      f0=f1;
      f1=f2;
      f2=f0+f1;  
  }
  printf("\n");
  return 0;
}
    
26/06/2024

47. Write a program given number is positive or negative?

#include<stdio.h>
int main()
{
    int num=0,choice=0;
    do
    {
       printf("enter a number : ");
       scanf("%d",&num);
       if(num>0)
       {
          printf("It is a positive ");
       }
       else
       {
          printf(" It is a negative ");
       }
       printf("Do u want to check another number yes(1) or no(0)\n");
       scanf("%d",&choice);
     }
     while(choice!=0); 
     return 0;
}

48. write a program to add two number using functions

#include<stdio.h>
int func(int a, int b);
int main()
{
  int a,b;
  printf("enter two numbers");
  scanf("%d%d",&a,&b);
  int c=func(a,b);
  printf("%d\n",c);
  return 0;
}
int func(int a, int b)
{
  return a+b;
}  // with arg and rv

49. write a program to implement a simple calculator using  functions
#include<stdio.h>
int add(int a, int b);
int sub(int a, int b);
int mul(int a, int b);
int div(int a, int b);
int main()
{
  int a,b;
  printf("enter two numbers");
  scanf("%d%d",&a,&b);
  int i=add(a,b);
  int j=sub(a,b);
  int k=mul(a,b);
  int l=div(a,b);
  printf("i=%d j=%d k=%d l=%d\n",i,j,k,l);
  return 0;
}
int add(int a, int b)
{
  return a+b;
}
int sub(int a, int b)
{
  return a-b;
}
int mul(int a, int b)
{
  return a*b;
}
int div(int a, int b)
{
  return a/b;
} 

50. factorial using functions

#include<stdio.h>
int fact(int num);
int main()
{
  int num=0;
  printf("enter a number:");
  scanf("%d",&num);
  long long int f=fact(num);
  printf("%lld\n",f);
  return 0;
}
int fact(int num)
{
   long long int fact=1;
   for (int i=1;i<=num;i++)
   {
      fact=fact*i;
   }
  return fact;
}

51. reveres a number using functions.

#include<stdio.h>
int rev(int num);
int main()
{
  int num=0;
  scanf("%d",&num);
  int r=rev(num);
  printf("%d",r);
  return 0;
}
int rev(int num)
{
      int rem,rev=0;
    while(num!=0)
    {
        rem=num%10;
        rev=(rev*10)+rem;
        num=num/10;
    }
     return rev;
}

52. palindrome using functions.

#include<stdio.h>
int rev(int num);
int main()
{
  int num=0;
  scanf("%d",&num);
  int r=rev(num);
  printf("%d\n",r);
  if(r==num)
  {
    printf("palindrome\n");
  }
  else
  {
     printf("not a palindrome\n");
  }
  return 0;
}
int rev(int num)
{
      int rem,rev=0;
    while(num!=0)
    {
        rem=num%10;
        rev=(rev*10)+rem;
        num=num/10;
    }
     return rev;
}

53. armstrong number using functions.

#include<stdio.h>
#include<math.h>
int arm(int num);
int main()
{
  int num;
  printf("enter a number: ");
  scanf("%d",&num);
 // int temp=num;
  int res = arm(num);
  if(num==res)
  {
    printf(" It is a armstrong number\n"); 
  }
  else
  {
    printf(" It is not a armstrong number\n");
  }
  return 0;
}
int arm(int num)
{  
     int count,sum=0,rem;
     int temp=num;
   //int a=num;
    while(temp!=0)
    {
       while(num!=0)
       {
          num=num/10;
          count++;
       }
         // printf("%d\n",count);
          rem=temp%10;
          sum+=pow(rem,count);
          temp=temp/10;
    }
  // printf("%d is \n",sum);
     return sum;
}

54. n natural number

#include <stdio.h>
int natural(int num)
{
  int sum=0;
  for(int i=0;i<=num;i++)
  {   
     sum=sum+i;
    
  }
   return sum;
}
int main()
{
    int num;
    printf(" enter a number:");
    scanf("%d", &num);
    int sum=natural(num);
    printf("%d\n",sum);
    return 0;
}

55. given number is set or clear

#include <stdio.h>
int main() 
{
    int num,pos,res;
    printf("enter a num and pos:\n");
    scanf("%d%d",&num,&pos);
    res=num&(1<<pos);
    printf("res=%d\n",res);
    if(res==0)
    {
        printf("clear");   
    }
    else
    {
        printf("set");
    }
    return 0;
}

28/06/2024

56. area of cricle using macro.
#include<stdio.h>
#include<math.h>
#define pi 3.14
int main()
{
    float r=0.0;
    printf("enter a number:");
    scanf("%f",&r);
    float area= (pi*r*r); // or  float area= pi*pow(r,2);
    printf("area= %f\n",area);
    return 0;
}

57. swap two number using macro

#include<stdio.h>
#define swap(a,b) a=a^b, b=a^b,a=a^b
int main()
{
   int a, b;
   scanf("%d%d",&a,&b);
   swap(a,b);
   printf("%d %d\n",a,b);
   return 0;
}
    or
    
#include<stdio.h>
#define swap b,a 

int main()
{
   int a, b;
   scanf("%d%d",&a,&b);

   printf("%d %d\n", swap);
   return 0;
}

58. upper and lower using macro

#include <stdio.h>
#define upper(c) (c >= 'A' && c <= 'Z')
#define lower(c) (c >= 'a' && c <= 'z')

int main()
{
    char ch;
    printf("Enter any character: ");
    scanf("%c",&ch);
    if (upper(ch))
        printf("%c is uppercase\n", ch);
    else if (lower(ch))
        printf("%c is lowercase\n", ch);
    else 
        printf("Entered character is not alphabet");

    return 0; 
}

59. square and cube using marco

#include <stdio.h>
#define square(a) a*a
#define cube(a) a*a*a

int main()
{
    int num;
    printf("Enter any number: ");
    scanf("%d",&num);
    int sq=square(num);
    int cb=cube(num);
    printf("sq=%d cb=%d\n",sq,cb);
    return 0; 
}



60. even or odd using marco.

#include <stdio.h>
#define num (a%2==0)? printf("even\n"):printf("odd\n")
int main()
{
    int a;
    printf("Enter any number: ");
    scanf("%d",&a);
    num;
    return 0; 
}

61. max or min using marco.

#include<stdio.h>
#define MAX(a,b) ((a)>(b)?(a):(b))
#define MIN(a,b) ((a)<(b)?(a):(b))
int main()
{
    int num1,num2;
    scanf("%d%d",&num1,&num2);
    int max = MAX(num1, num2);
    int min = MIN(num1,num2);
    printf("max=%d min=%d\n",max,min);
    return 0;
}

62. even or odd using multiline marco

#include <stdio.h>
#define even_odd(x)\
  if(x & 1 )\
     printf("%d is odd\n",x);\
   else\
    printf("%d is even\n",x);
int main()
{
    int a;
    printf("Enter any number: ");
    scanf("%d",&a);
    even_odd(a);
    return 0; 
}

63. binary to decimal 

#include<stdio.h>
#include<math.h>
int bin_dec(long long int num);
int main()
{
   long long int num;
   printf("enter a number ");
   scanf("%lld",&num);
   int deci=bin_dec(num);
   printf("%lld in the form of decimal = %d\n", num, deci);
   return 0;
}
int bin_dec(long long int num)
{
   int rem,dec=0,i=0;
   while(num!=0)
   {
      rem=num%10;
      num=num/10;
      dec+=rem*pow(2,i);
      i++;
    }
    return dec;
}

64. decimal to binary

#include<stdio.h>
#include<math.h>
int dec_bin(long long int num);
int main()
{
   int num;
   printf("enter a number ");
   scanf("%d",&num);
   long long int binary=dec_bin(num);
   printf("%d in binary form = %lld\n", num, binary);
   return 0;
}
int dec_bin(long long int num)
{
   int rem,i=1;
   long long int bin=0;
   while(num!=0)
   {
      rem=num%2;
      num=num/2;
      bin+=rem*i;
      i*=10;
    }
    return bin;
}

num  rem=num%2	 num=num / 2    binary 	            i
13	1	    6	        1	            1
6	0	    3	        1 + 0*10 = 1	    10
3	1	    1	        1 + 1*10 = 11       100
1	1	    0	        11 + 1*100 = 111    1000

65. decimal to hexa-decimal

#include <stdio.h>

void dec_to_hex(int num);

int main()
{
    int num;
    printf("Enter a number: ");
    scanf("%d", &num);
    printf("%d in hexadecimal form = ", num);
    dec_to_hex(num);
    printf("\n");
    return 0;
}

void dec_to_hex(int num)
{
    char hex[100];
    int i = 0;
    
    if (num == 0)
    {
        printf("0");
        return;
    }
    while (num != 0)
    {
        int rem = num % 16;
        if (rem < 10)
        {
            hex[i] = rem + '0';
        }
        else
        {
            hex[i] = rem - 10 + 'A';
        }
        i++;
        num = num / 16;
    }
    for (int j = i - 1; j >= 0; j--)
    {
        printf("%c", hex[j]);
    }
}


66. local scope

#include<stdio.h>
int main()
{
   int x=1,y=2,z=3;
   printf("x=%d,y=%d,z=%d\n",x,y,z);
   {
      int x=10;
      float y=20;
      printf("x=%d,y=%f,z=%d\n",x,y,z);
      {
        int z=100;
        printf("x=%d,y=%f,z=%d\n",x,y,z);
      }
   }
   return 0;
}

1/07/2024

67. global scope

 #include<stdio.h>
 void func();
 int a=56;
 int main()
 {
   int a=6;
   printf("before call in main: %d\n",a);
   func();
   printf("after call in main: %d\n",a);
   return 0;
 }
 
 void func()
 {
    printf("in function : %d\n",a);
    a=86;
    printf("in func: %d\n",a);
 }
 
68. tentative 

#include<stdio.h>
void func();
int a;
int main()
{
   printf(" in main : %d\n",a);
   func();
   return 0;
}

int a=93;
void func()
{
   printf(" in function: %d\n",a);
}

69. by using auto storage class specifier.

#include<stdio.h>
int main()
{
    auto int a=10;
   printf(" in main : %d\n",a);
   return 0;
}

70. by using register storage class specifier.

#include<stdio.h>
int main()
{
    register int a;
   printf(" in main : %d\n",a);
   return 0;
}

71. by using static storage class specifier.

#include<stdio.h>
static int count=0;
int func()
{
  
   count++;
   return count;
}
int main()
{
 
   printf("%d\n",func());
   printf("%d\n",func());
   printf("%d\n",func());
   return 0;
}

72. external linkage

#include<stdio.h>
void func();
int a=10;
int main()
{
   printf(" a=%d\n",a);
   func();
   return 0;
}    // file1.c

#include<stdio.h>
extern int a;
void func()
{
   printf(" %d\n",a);
} // file2.c

73. conditional inclusion

#include <stdio.h>
#define DEBUG

int main() {
    printf("This code always runs.\n");

    #ifdef DEBUG
        printf("Debug mode is enabled.\n");
    #else
        printf("Debug mode is not enabled.\n");
    #endif

    return 0;
}
   /* ------------------------------------ * ARRAY * ------------------------------------ */

2/07/2024

74. the sum of all the element using array

#include<stdio.h>
int main()
{
   int size;
   printf(" enter a size of an array:\n ");
   scanf("%d",&size);
   int arr[size],sum=0,i;
   printf(" enter the element:\n ");
   for( i=0;i<size;i++)
   {
      scanf("%d",&arr[i]);
   }
   for( i=0;i<size;i++)
   {
      sum+=arr[i];
   }
   printf("the sum of all the element are %d\n",sum);
   return 0;
}

75. largest element of array.

#include<stdio.h>
int main()
{
   int size;
   printf(" enter a size of an array:\n ");
   scanf("%d",&size);
   int arr[size],sum=0,i;
   int max=arr[size];
   printf(" enter the element:\n ");
   
   for( i=0;i<size;i++)
   {
      scanf("%d",&arr[i]);
   }
   for( i=0;i<size;i++)
   {
      if (arr[i] > max)
          max = arr[i];
   }
   printf("the largest element is %d\n",max);
   return 0;
}

76. smallest element of array.

#include<stdio.h>
int main()
{
   int size;
   printf(" enter a size of an array:\n ");
   scanf("%d",&size);
   int arr[size],i;
   int min=arr[size];
   printf(" enter the element:\n ");
   
   for( i=0;i<size;i++)
   {
      scanf("%d",&arr[i]);
   }
   for( i=0;i<size;i++)
   {
      if (arr[i] < min)
          min = arr[i];
   }
   printf("the smallest element is %d\n",min);
   return 0;
}

77. write a program to write two functions one is to read the array elements and another one is dispaly the array elements.

#include<stdio.h>
int read(int arr[], int size);
int disp(int arr[], int size);

int main()
{
   int size;
   printf(" enter a size of an array:\n ");
   scanf("%d",&size);
   int arr[size],i;
   read(arr,size);
   disp(arr,size);

    return 0;
}

int read(int arr[], int size)
{
  int i;
   printf(" enter the element:\n ");
   for( i=0;i<size;i++)
   {
    //  printf("Element %d: ", i + 1);
      scanf("%d",&arr[i]);
   }
}

int disp(int arr[], int size)
{
  int i;
   printf("the entered array elements are:\n");
   for( i=0;i<size;i++)
   {
      printf("%d\n",arr[i]);
   }
   
}

78. linear search

#include<stdio.h>
int linear(int arr[], int size, int key);

int main()
{
   int size;
   printf(" enter a size of an array:\n ");
   scanf("%d",&size);
   int arr[size],i;
   printf(" enter the element:\n ");
   for( i=0;i<size;i++)
   {
      scanf("%d",&arr[i]);
   }
   
   int key;
   printf(" enter a key:\n ");
   scanf("%d",&key); 
     
   int pos = linear(arr,size,key);
   
    if(pos == 0)
    {
      printf(" element  is not found\n");
    }
    else
    {
      printf("element is found at position %d\n",pos);
    }
    return 0;
}

int linear(int arr[], int size, int key)
{
   int i;
   for ( i = 0; i < size; i++) 
   {
        if (arr[i] == key) 
        {
            return i+1;
        }
   }
   return 0;
}

79. Binary search

#include<stdio.h>
int binary(int arr[], int size,int key);

int main()
{
   int size;
   printf(" enter a size of an array:\n ");
   scanf("%d",&size);
   int arr[size],i;
   printf(" enter the element:\n ");
   for( i=0;i<size;i++)
   {
      scanf("%d",&arr[i]);
   }
   
   int key;
   printf(" enter a key:\n ");
   scanf("%d",&key); 
     
   int pos = binary(arr,size,key);
   
    if(pos == 0)
    {
      printf(" element  is not found\n");
    }
    else
    {
      printf("element is found at position %d\n",pos);
    }
    return 0;
}

int binary(int arr[], int size,int key)
{
   int i;
   int low=0;
   int high= size-1;
   int mid;
   for(i=low;i<=high;i++)
   {
     mid = (low+high)/2;
     if(key == arr[mid])
     {
       return mid+1;
     }
     else if (key > arr[mid])
     {
       low= mid+1;
     }
     else     
     {
       high= mid-1;
     }
   }
   //return 0;
}

80. reversing an array

#include<stdio.h>
void reverse(int arr[],int size);

int main()
{
  int size;
  printf(" enter a size of an array:\n");
  scanf("%d",&size);
  int arr[size],i;
  printf(" enter the elements:\n");
  for(i=0;i<size;i++)
  {
     scanf("%d",&arr[i]);
  }
  
  reverse(arr,size);
  return 0;
}

void reverse(int arr[],int size)
{
  printf(" reversing an array elements:\n");
  for(int i=size-1;i>=0;i--)
  {
    printf("%d ",arr[i]);
  }
  printf("\n");
}

81. merge two arrays

#include<stdio.h>
void mer(int arr1[],int arr2[], int s1, int s2, int merge[]);

int main()
{
  int s1,s2,i,j;
  
  printf(" enter a size of an array1:");
  scanf("%d",&s1);
  
  int arr1[s1];
  
  printf(" enter the arrat1 elements:\n");
  for(i=0;i<s1;i++)
  {
     scanf("%d",&arr1[i]);
  }
  
  printf(" enter a size of an array2:");
  scanf("%d",&s2);
  
  int arr2[s2];
  
  printf(" enter the arrat2 elements:\n");
  for(j=0;j<s2;j++)
  {
     scanf("%d",&arr2[j]);
  }
  
  int merge[s1+s2];
  
  mer(arr1,arr2,s1,s2,merge);
  
  return 0;
}

void mer(int arr1[],int arr2[], int s1, int s2, int merge[])
{
   int i=0,j=0,k=0;
   
   while( i<s1 && j<s2 )
   {
      if(arr1[i]<=arr2[j])
      {
        merge[k]=arr1[i];
        i++;
      }
      else
      { 
       merge[k]=arr2[j];
       j++;
      }
      k++;
   } 
   while( i<s1)
   {
      merge[k]=arr1[i];
      k++;
      i++;
   }
   while(j<s2)
   {
     merge[k]=arr2[j];
     k++;
     j++;
   } 
   printf(" merged elements are:\n"); 
   for(i=0;i< s1+s2;i++)
   {
     printf("%d ", merge[i]);
   } 
   printf("/n");
}

82. 2nd largest and 2nd smallest array elements.

#include<stdio.h>
int lar(int arr[],int size);
int sma(int arr[],int size);
int main()
{
    int size;
    printf("enter the size element\n");
    scanf("%d",&size);
    int arr[size],i;
    printf("enter the array elements\n");
    for(i=0;i<size;i++)
    {
        scanf("%d",&arr[i]);
    }
    printf("%d ",lar(arr,size));
    printf("%d",sma(arr,size));
    return 0;
}

int lar(int arr[],int size)
{
   int i,lar1=arr[0],lar2=arr[1];
   for(i=0;i<size;i++)
   {
       if(lar1<arr[i])
       {
           lar2=lar1;
           lar1= arr[i];
       } 
       
       else if(lar2<arr[i] && lar1!=arr[i]) 
       {
           lar2=arr[i];
       } 
       
   }
   return lar2;
}

int sma(int arr[],int size)
{
   int i,sma1=arr[0],sma2=arr[1];
   for(i=0;i<size;i++)
   {
       if(sma1>arr[i])
       {
           sma2=sma1;
           sma1= arr[i];
       } 
       
       else if(sma2>arr[i] && sma1!=arr[i]) 
       {
           sma2=arr[i];
       } 
       
   }
   return sma2;
   printf("\n");
}

3/07/2024

83. Bubble sort

#include<stdio.h>
void print(int arr[], int size); 
void bubble(int arr[],int size);
int main()
{
    int size;
    printf("enter the size element\n");
    scanf("%d",&size);
    int arr[size],i;
    printf("enter the array elements\n");
    for(i=0;i<size;i++)
    {
        scanf("%d",&arr[i]);
    }
    
    printf("element before sorting:\n");
    print(arr,size);
    
    bubble(arr,size);
    
    printf("after sorting:\n");
    print(arr,size);
    
    return 0;
}

void print(int arr[], int size) 
{
    int i;
    for (i = 0; i < size; i++) 
    {
        printf("%d ", arr[i]);
    }
    printf("\n");
}

void bubble(int arr[],int size)
{
  int i,j,temp;
  for(i=0;i<size-1;i++)
  {
    for(j=0;j<size-1-i;j++)
    {
      if(arr[j]>arr[j+1])
      {
         /* arr[j]= arr[j] + arr[j+1];
          arr[j+1] = arr[j] - arr[j+1];
          arr[j] = arr[j] - arr[j+1];  */
          
          temp= arr[j];
          arr[j]=arr[j+1];
          arr[j+1]=temp;
      }
    }
  }
}    


84. insertion sort

#include<stdio.h>
void print(int arr[], int size);
void insertion(int arr[],int size);

int main()
{
    int size;
    printf("enter the size element\n");
    scanf("%d",&size);
    int arr[size],i;
    printf("enter the array elements\n");
    for(i=0;i<size;i++)
    {
        scanf("%d",&arr[i]);
    }
    printf("element before sorting:\n");
    print(arr,size);
    insertion(arr,size);
    printf("after sorting:\n");
    print(arr,size);
    return 0;
}

void print(int arr[], int size) 
{
    int i;
    for (i = 0; i < size; i++) 
    {
        printf("%d ", arr[i]);
    }
    printf("\n");
}

void insertion(int arr[],int size)
{
   for (int i = 1; i < size; i++) 
   {
        int key = arr[i];
        int j = i - 1;
        
        while (j >= 0 && arr[j] > key) 
        {
            arr[j + 1] = arr[j];
            j--;
        }
        arr[j + 1] = key;
    }
}

85. selection sort

#include<stdio.h>
void print(int arr[], int size);
void selection(int arr[],int size);
int main()
{
  int size;
  printf(" Enter a size of an array: \n");
  scanf("%d",&size);
  int arr[size],i;
  printf(" enter a elements of an array: \n");
  for(i=0;i<size;i++)
  {
    scanf("%d",&arr[i]);
  }
  printf(" Element before sorting are : \n");
  print(arr,size);
  selection(arr,size);
  printf(" Element after sorting are : \n");
  print(arr,size);  
  return 0;
} 

void print(int arr[], int size)
{
  for(int i=0;i<size;i++)
  {
    printf("%d ", arr[i]);
  }
  printf("\n");
}

void selection(int arr[],int size)
{
  int i,j,temp;
  
  for( i=0;i<size-1;i++)
  {
     int min=i;
     for(j=i+1;j<size;j++)
     {
       if(arr[j]<arr[min])
       {
         min=j;
       }
     }
     
     if(min!=i)
     {
       temp=arr[i];
       arr[i]=arr[min];
       arr[min]=temp;
     }
  }
}   

86. freq of all elements using array.

#include<stdio.h>
int main()
{
    int size;
    printf(" enter a size of an array:\n");
    scanf("%d",&size);
    int i,arr[size],count=1;
    printf("entered elements of an array\n");
    for(i=0;i<size;i++)
    {
        scanf("%d",&arr[i]);
    }
     
    for(i=0;i<size;i++)
    {
        count=1;
        if(arr[i]!=-1)
        {
           for(int j=i+1;j<size;j++)
           {
             if(arr[i]==arr[j])
             {
               count++;
               arr[j]=-1; // Mark this element as counted
             }
          }
          printf("%d is repeated %d times\n", arr[i], count);
        }
    }
    return 0;
}
          or
#include <stdio.h>
#define max_chars 256
int main()
{
    int f[max_chars]={0};
    int size;
    printf(" enter a size of an array:\n");
    scanf("%d",&size);
    int i,arr[size];
    printf("entered elements of an array\n");
    for(i=0;i<size;i++)
    {
        scanf("%d",&arr[i]);
    }

    for(i=0;i<size;i++)
    {
        f[arr[i]]++;
    }
    for(i=0;i<size;i++)
    {
      if(f[arr[i]])
      {
        printf("%d is %d\n",arr[i],f[arr[i]]);
        f[arr[i]]=0;
      }
    }
    return 0;
}

87. removing duplicate elements in array.

#include<stdio.h>
int main()
{
    int size;
    printf("enter size\n");
    scanf("%d",&size);
    int a[size],i;
    printf("enter elements\n");
    for(i=0;i<size;i++)
    {
        scanf("%d",&a[i]);
    }
    int freq=a[0],count=1,j;
    for(i=0;i<size-1;i++)
    {
        for(j=i+1;j<size;j++)
        {
            if(a[i]==a[j])
          {
            for(int k=j;k<size-1;k++)
            {
                a[k]=a[k+1];
            }
            size--;
            j--;
          } 
        }
    }
    printf(" after removing duplicate elements: \n");
    for(i=0;i<size;i++)
    {
        printf("%d\t",a[i]);
    }
    
    return 0;
}
    or
    
#include <stdio.h>
#define max_chars 256
int main()
{
    int f[max_chars]={0};
    int size;
    printf("enter a size of an array:\n");
    scanf("%d",&size);
    int i,arr[size];
    printf("entered elements of an array\n");
    for(i=0;i<size;i++)
    {
        scanf("%d",&arr[i]);
    }

    for(i=0;i<size;i++)
    {
        f[arr[i]]++;
    }
    
    printf("after removing duplicate elements are:\n");
    for(i=0;i<size;i++)
    {
      if(f[arr[i]]>=1)
      {
         printf("%d\n",arr[i]);
         f[arr[i]]=0;
      }
    }
    return 0;
}

88. write a program to copy a array elements from one to another array.

#include<stdio.h>
int main()
{
  int size;
  printf(" enter a size of an array:\n");
  scanf("%d",&size);
  int src[size],des[size],i;
  printf("enter the elements:\n");
  for(i=0;i<size;i++)
  {
    scanf("%d",&src[i]);
  }
  
  for(i=0;i<size;i++)
  {
     des[i]=src[i];
  }
  
  printf(" elements of source array is :\n");
  for(i=0;i<size;i++)
  {
    printf("%d ",src[i]);
  }
  printf("\n");
  printf(" elements of destination array is :\n");  
  for(i=0;i<size;i++)
  {
    printf("%d ",des[i]);
  }
  printf("\n");
  return 0;
}

   /*-------------------------------------- * 2D ARRAY * ---------------------------------- */

89.  write a program to scan and display the matrix of size 3x3. 

#include<stdio.h>
#define row 3
#define col 3

int main()
{
  int mat[row][col];
  printf(" enter the matrix elements: \n");
  for(int i=0;i<row;i++)
  {
    for(int j=0;j<col;j++)
    {
      scanf("%d",& mat[i][j]);
    }
  }
  
  printf("the matrix elements are: \n");
  for(int i=0;i<row;i++)
  {
    for(int j=0;j<col;j++)
    {
      printf("%d\t",mat[i][j]);
    }
    printf("\n");
  }
  return 0;
}

90. transpos matrix.

#include<stdio.h>
#define row 3
#define col 3

int main()
{
  int mat[row][col];
  printf(" enter the matrix elements: \n");
  for(int i=0;i<row;i++)
  {
    for(int j=0;j<col;j++)
    {
      scanf("%d",& mat[i][j]);
    }
  }
  
  printf("the matrix elements are: \n");
  for(int i=0;i<row;i++)
  {
    for(int j=0;j<col;j++)
    {
      printf("%d\t",mat[j][i]);
    }
    printf("\n");
  }
  return 0;
}

91. Identity matrix or not
  
#include<stdio.h>
#define row 3
#define col 3

int main()
{
  int mat[row][col],iden;
  
  printf(" enter the matrix elements: \n");
  for(int i=0;i<row;i++)
  {
    for(int j=0;j<col;j++)
    {
      scanf("%d",& mat[i][j]);
    }
  }
  printf(" the matrix elements are: \n");
  for(int i=0;i<row;i++)
  {
    for(int j=0;j<col;j++)
    {
      printf("%d\t",mat[i][j]);
    }
    printf("\n");
  }
  iden =1;
  for(int i=0;i<row;i++)
  {
    for(int j=0;j<col;j++)
    {
      if(i==j && mat[i][j]!=1)
      {
         iden=0;
      }
      else if(i!=j && mat[i][j]!=0)
      {
        iden=0;
      }
    }
  }
  if(iden == 1)
  {
    printf(" the given matrix is identity\n");
  }
  else
  {
    printf(" the given matrix is not identity matrix\n");
  }
  return 0;
}

92. sparse matrix

#include<stdio.h>
#define row 3
#define col 3

int main()
{
  int mat[row][col],iden;
  
  printf(" enter the matrix elements: \n");
  for(int i=0;i<row;i++)
  {
    for(int j=0;j<col;j++)
    {
      scanf("%d",& mat[i][j]);
    }
  }
  printf(" the matrix elements are: \n");
  for(int i=0;i<row;i++)
  {
    for(int j=0;j<col;j++)
    {
      printf("%d\t",mat[i][j]);
    }
    printf("\n");
  }
  int a,b;
  for(int i=0;i<row;i++)
  {
    for(int j=0;j<col;j++)
    {
      if(mat[i][j]==0)
      {
         a++;
      }
      else
      {
        b++;
      }
    }
  }
  if(a>b)
  {
    printf(" the given matrix is sparse\n");
  }
  else
  {
    printf(" the given matrix is not sparse matrix\n");
  }
  return 0;
}

   /*----------------- --------------------- * STRINGS * ---------------------------------- */
4/07/2024

93. 

#include<stdio.h>
int main()
{
  char name[100];
  printf(" enter a charcter:\n");
  //scanf("%[^\n]s",name);
 // gets(name);
 fgets(name,100, stdin);
    printf("my name is %s\n",name);
  return 0;
 }

94. 

#include<stdio.h>
int main()
{
  char str[]={'a','b','c','d','\0'};
  printf(" %s\n",str);
  return 0;
 }

95. sizeof()

#include<stdio.h>
int main()
{
  char str[]={'a','b','c','d','\0'};
  printf(" %s\n",str);
  printf("%lu\n",sizeof(str));
  return 0;
 }
  
96. string length using predefine functions.

#include<stdio.h>
#include<string.h>
int main()
{
  char str[100];
  printf(" Enter the string\n");
  scanf("%[^\n]s", str);
  int len = strlen(str);
  printf("The length of the string is %d\n",len);
  return 0;
}

97. string length using user-define functions.

#include<stdio.h>
int str_len(char str[])
{ 
   int count;
   for(count=0;str[count]!='\0';count++);
   return count;
}
  
int main()
{
  char str[100];
  printf(" Enter the string\n");
  scanf("%[^\n]s", str);
  int len = str_len(str);
  printf("The length of the string is %d\n",len);
  return 0;
}
     or
     
#include<stdio.h>
int str_len(char string[]);
int main()
{
    char str[100];
    printf("enter the sting\n");
    scanf("%[^\n]s",str);
    int length=str_len(str);
    printf("%d\n",length);
    return 0;
}
int str_len(char string[])
{
    int i=0;
    while(string[i]!='\0')
    {
        i++;
    }
    return i;
}

98. string copy using predefine functions.

#include<stdio.h>
#include<string.h>
int main()
{
  char src[100], des[100];
  printf(" Enter the string\n");
  scanf("%[^\n]s", src);
  strcpy(des,src);
  printf("The copied  string is %s\n",des);
  return 0;
}

99. string copy using user-define functions.

#include<stdio.h>
void str_cpy(char des[], char src[])
{ 
   int i;
   for(i=0;des[i]=src[i];i++);
   des='\0';

}
  
int main()
{
  char src[100],des[100];
  printf(" Enter the string\n");
  scanf("%[^\n]s ", src);
  str_cpy(des,src);
  printf("The copied string is %s\n",des);
  return 0;
}
            or
      
#include<stdio.h>
void string_copy(char des[],char src[]);
int main()
{
   char src[100],des[100];
   printf("enter the sorce\n");
   scanf("%[^\n]s",src);
   string_copy(des,src);
   printf("copied string %s\n",des);
   return 0;
}

void string_copy(char des[],char src[])
{
    int i=0;
    while(src[i]!='\0')
    {
        des[i]=src[i];
        i++;
    }
}

100. string compering using predefine functions.

#include<stdio.h>
#include<string.h>
int main()
{
  char str1[100],str2[100];
  printf(" Enter the string1\n");
  scanf("%[^\n]s",str1);
  printf(" Enter the string2\n");
  scanf(" %[^\n]s",str2);
  int comp =strcmp(str1,str2);
 if(comp==0)
 {
   printf("string identical\n");
 }
 else
 {
   printf("not identical string are different\n");
 }
  return 0;
}

101. string compering using user-define functions.

#include<stdio.h>
int str_cmp(char str1[], char str2[])
{
  int i;
  for(i=0; str1[i]!='\0' || str2[i]!='\0'; i++)
  {
     if( str1[i] != str2[i])
     {
       return 1;
     }
   }
   return 0;
}
      
int main()
{
  char str1[100],str2[100];
  printf(" Enter the string1\n");
  scanf("%[^\n]s",str1);
  printf(" Enter the string2\n");
  scanf(" %[^\n]s",str2);
  int comp = str_cmp(str1,str2);
 if(comp==0)
 {
   printf("string identical\n");
 }
 else
 {
   printf("not identical string are different\n");
 }
  return 0;
}
   
           or

#include<stdio.h>
int str_cmp(char str1[],char str2[]);
int main()
{
    char str1[100],str2[100];
    printf("enter the string one\n");
    scanf("%[^\n]s",str1);
    printf("enter the string two\n");
    scanf(" %[^\n]s",str2);
    int res=str_cmp(str1,str2);
    if (res==0)
    printf("Identical\n");
    else
    printf("not identical\n");
    return 0;
}
int str_cmp(char str1[],char str2[])
{
    int i=0;
    while(str1[i]!='\0' || str2[i]!='\0')
    {
        if(str1[i]!=str2[i])
        return str1[i]-str2[i];
        i++;
    }
    return 0;
}
 
102. string concatenated using predefine functions. // concatenated- the addition of two strings or updating them

#include<stdio.h>
#include<string.h>
int main()
{
  char str1[100],str2[100];
  printf(" Enter the string1\n");
  scanf("%[^\n]s",str1);
  printf(" Enter the string2\n");
  scanf(" %[^\n]s",str2);
  strcat(str1,str2);
  printf("The concatenated string %s\n",str1);
  return 0;
}

103. string concatenated using user-define functions.

#include<stdio.h>
void str_cat(char str1[], char str2[])
{
   int i, len=0;
   for(i=0;str1[i]!='\0';i++)
   {
     len++;
   }
   for(i=0;str2[i]!='\0';i++)
   {
     str1[len+i] = str2[i];
   }
     str1[len+i]='\0';
}

int main()
{
  char str1[100],str2[100];
  printf(" Enter the string1\n");
  scanf("%[^\n]s",str1);
  printf(" Enter the string2\n");
  scanf(" %[^\n]s",str2);
  str_cat(str1,str2);
  printf("The concatenated string %s\n",str1);
  return 0;
}

104. convert upper case to lower case string

#include <stdio.h>  
#include <string.h>  
int main ()  
{  
  char str[100]; 
  printf ("Enter the string: ");  
  scanf (" %s",str);
  int len = strlen(str);    
  for ( int i = 0; i <= len; i++)  
  {  
     if (str[i] >= 65 && str[i] <= 90)
     { 
       str[i] = str[i] + 32; 
     }
  }  
  printf (" Upper Case to Lower case string is: %s\n", str); 
  return 0;
}  
            or
     
#include <stdio.h>  
int main ()  
{  
  char str[100]; 
  printf ("Enter the string: ");  
  scanf (" %s",str);   
  for ( int i = 0; str[i] != '\0'; i++)  
  {  
     if (str[i] >= 'A' && str[i] <= 'Z') // for lower case to upper case ( >='a' &&  <='z' )
     { 
       str[i] = str[i] + 32; // -32
     }
  }  
  printf (" Upper Case to Lower case string is: %s\n", str); 
  return 0;
}  

105. converting both low to hig and hig to low case string.

#include <stdio.h>  
#include <string.h>  
int main ()  
{  
  char str[100]; 
  printf ("Enter the string: ");  
  scanf (" %s",str);
  int len = strlen(str);    
  for ( int i = 0; i <= len; i++)  
  {  
     if (str[i] >= 65 && str[i] <= 90)
     { 
       str[i] = str[i] + 32; 
     }
     else if (str[i] >= 97 && str[i] <= 122)
     {
       str[i] = str[i] - 32;
     }
  }  
  
  printf (" converting  is: %s\n", str); 
  return 0;
}  

106. Anagram or Not

#include<stdio.h>
#include<string.h>
int main()
{
  char str1[100], str2[100];
  printf(" Enter a string1: \n");
  scanf("%[^\n]s",str1);
  
  printf(" Enter a string2: \n");
  scanf(" %[^\n]s",str2);
  
  int len1 = strlen(str1);
  int len2 = strlen(str2);
  
  char temp;
  printf(" length of the string1 is: %d\n",len1);
  printf(" length of the string2 is: %d\n",len2);
  
  if(len1 != len2)
  {
    printf("Given two strings are Not anagram\n");
    return 0;
  }
  
  for(int i=0;i<len1;i++)
  {
    for(int j=i+1;j<len2; j++)
    {
      if(str1[i]>str1[j])
      {
        temp = str1[i];
        str1[i]= str1[j];
        str1[j]=temp;
      }
      if(str2[i]>str2[j])
      {
        temp = str2[i];
        str2[i]= str2[j];
        str2[j]=temp;
      }       
    }
  }
  printf("string1 is %s\n",str1);
  printf("string2 is %s\n",str2);  
  int res = strcmp(str1,str2);
   
   
   if(res == 0)
   {
      printf(" given strings are anagram\n");
   }
   else
   {
     printf(" Give strings are not a anagram\n");
   }
   return 0;
}

107. Sort the string

#include<stdio.h>
#include<string.h>
int main()
{
    char str[100], temp;
    printf("enter string\n");
    scanf("%[^\n]s",str);
    int len = strlen(str);
    for(int i=0;i<len-1;i++)
    {
      for(int j=i+1;j<len;j++)
      {
        if(str[i]>str[j])
        {  
          temp=str[i];
          str[i]=str[j];
          str[j]=temp;
        }
      }
    }
    printf("%s\n",str);
    return 0;   
}

108. reverse a string

#include<stdio.h>
#include<string.h>
int main()
{
    char str[100],temp;
    printf("enter string\n");
    scanf("%[^\n]s",str);
    int len = strlen(str);
    for( int i=0;i<len/2;i++)
    {
        temp=str[i];
        str[i]=str[len-1-i];
        str[len-1-i]=temp;
    }
      printf("%s\n",str);
 return 0;   
}

109. palindrome or not using strings

#include<stdio.h>
#include<string.h>
int main()
{
    char str[100],str1[100] temp;
    printf("enter string\n");
    scanf("%[^\n]s",str);
    strcpy(str1,str);
    printf("\ncopied string is %s\n",str1);
    int len=strlen(str);
    for(int i=0;i<len/2;i++)
    {
        temp=str[i];
        str[i]=str[len-1-i];
        str[len-1-i]=temp;
    }
    printf("\nthe reverse string is %s\n",str);    
    for(int i=0;i<=len-1;i++)
    {
       if(str1[i]!=str[i])
       {
         printf("\nGiven string is not a palindrome \n");
         return 0;
       } 
    }
    printf("\nGive string is palindrome\n");
    return 0;   
}

110. frequency of each character of string.

#include<stdio.h>
#include<string.h>
#define max_chars 256
int main()
{
    char str1[100];
    printf("enter the string\n");
    scanf("%s",str1);
    int count[max_chars]={0};
    int len = strlen(str1);
    printf("length of the string is %d\n",len);
    for(int i=0;i<len;i++)
    {
        count[(int)str1[i]]++;
    }
    for(int i=0;i<max_chars;i++)
    {
        if(count[i]!=0)
        {
            printf("%c is repeated %d times\n",(char)i,count[i]);
        }
    }
    return 0;
}
       or

#include <stdio.h>
#define max_size 256
int main()
{
   unsigned char s[100];
    int f[max_size]={'\0'};
    printf("enter a character:\n");
    scanf("%[^\n]s",s);
    int i;
    for(i=0;s[i]!='\0';i++)
    {
        f[s[i]]++;
    }
    printf("The frequency of each character is:\n");
    for(i=0;s[i]!='\0';i++)
    {
      if(f[s[i]])
      {
        printf("%c is %d\n",s[i],f[s[i]]);
        f[s[i]]=0;
      }
    }
    return 0;
}
111. frequency of each charcter of string using functions.

#include<stdio.h>
#include<string.h>
#define max_chars 256
void freq(char str1[]);

void freq(char str1[])
{
    int count[max_chars]={0};
    int len = strlen(str1);
    for(int i=0;i<len;i++)
    {
        count[(int)str1[i]]++;
    }
    for(int i=0;i<max_chars;i++)
    {
        if(count[i]!=0)
        {
            printf("%c is repeated %d times\n",(char)i,count[i]);
        }
    }
    return 0;
}

int main()
{
    char str1[100];
    printf("enter the string\n");
    scanf("%s",str1);
    int res = freq(str1);
    printf("%s\n",res);
    return 0;
}   
       or

#include <stdio.h>
#include <string.h>
#define MAX_CHARS 256

void countFrequency(char str[], int count[])
 {
    int len = strlen(str);
    for (int i = 0; i < len; i++)
     {
        count[(int)str[i]]++;
    }
}

void printFrequency(int count[])
{
    for (int i = 0; i < MAX_CHARS; i++)
     {
        if (count[i] != 0)
        {
            printf("%c is repeated %d times\n", (char)i, count[i]);
        }
    }
}

int main()
 {
    char str[100];
    int count[MAX_CHARS] = {0};

    printf("Enter the string: ");
    scanf("%s", str);
    
    printf("Length of the string is: %d\n", (int)strlen(str));

    countFrequency(str, count);
    printFrequency(count);

    return 0;
}

112. removing duplicate character.

#include<stdio.h>
#include<string.h>
#define max_chars 256
int main()
{
    char str1[100];
    printf("enter the string\n");
    scanf("%s",str1);
    
    int count[max_chars]={0};
    char unique[100];
    int  unique_count=0;
    int len = strlen(str1);
    for(int i=0;i<len;i++)
    { 
       if(count[(int)str1[i]] == 0)
       {
         unique[unique_count++]=str1[i];
         count[(int)str1[i]] = 1;
       }
    }
    for(int i=0;i<unique_count;i++)
    {
      printf("unique character are %c\n",unique[i]);  
    }
    return 0;
}
        or
#include<stdio.h>
#include<string.h>
#define max_size 256
int main()
{
  unsigned char str[100];
  char f[max_size]={0};
  printf("enter a string:");
  scanf("%[^\n]s",str);
  
  for(int i=0;str[i]!='\0';i++)
  {
    f[str[i]]++;
  }

  for(int i=0;str[i]!='\0';i++)
  {
     if(f[str[i]]>=1)
     {
       printf("%c\n",str[i]);
       f[str[i]]=0;
     }
  }
  return 0;
}

113. pangram or not

#include<stdio.h>
#include<string.h>
#define alphabet 26
int pangram(char str[])
{
  int alp[alphabet] = {0};
  int sum=0;
  int len = strlen(str);
  printf("%d\n",len);
  for(int i=0; i<len; i++)
  {
     if(str[i]>='a' && str[i]<='z')
     {
       sum+=!alp[str[i]-'a']; // 't' - 'a' = 19 => alp[19] is initially 0 => !alp[19] = 1, so sum becomes 1
       alp[str[i]- 'a'] =1; // alp[19] is set to 1
     }
     else if(str[i]>='A' && str[i]<='Z')
     {
       sum+=!alp[str[i]-'A'];
       alp[str[i]- 'A'] =1;
     }
  }
  return sum;
} 
int main()
{
  char str[100];
  printf(" enter a string:\n");
  fgets(str, sizeof(str), stdin);
  int sum = pangram(str);
  
  if(sum == alphabet)
  {
    printf(" The given string is a pangram\n");
  }
  else
  {
    printf(" The given string is not a pangram\n");
  }
  return 0;
}

//-------------------------------------------------------------------------- 
=> multiply two matrixs

#include<stdio.h>
#define row 2
#define col 2

int main()
{
  int mat1[row][col],i,j;
  int mat2[row][col];
  printf("enter a matrix1 elements:\n");
  for(i=0;i<row;i++)
  {
    for(j=0;j<col;j++)
    {
      scanf("%d",&mat1[i][j]);
    }
  } 
  printf("enter a matrix2 elements:\n");
  for(i=0;i<row;i++)
  {
    for(j=0;j<col;j++)
    {
      scanf("%d",&mat2[i][j]);
    }
  } 
  printf("entered matrix1 elements are:\n");
  for(i=0;i<row;i++)
  {
    for(j=0;j<col;j++)
    {
      printf("%d\t",mat1[i][j]);
    }
    printf("\n");
  } 
  printf("entered matrix2 elements are:\n");
  for(i=0;i<row;i++)
  {
    for(j=0;j<col;j++)
    {
      printf("%d\t",mat2[i][j]);
    }
    printf("\n");
  } 
  int mul[row][col];

  for(i=0;i<row;i++)
  {
    for(j=0;j<col;j++)
    {
      mul[i][j]=0;
      for(int k=0;k<col;k++)
      {
        mul[i][j] = mul[i][j]+mat1[i][k]*mat2[k][j];
      }
    }
  }
  
  printf("resultant matrxi are:\n");
  for(i=0;i<row;i++)
  {
    for(j=0;j<col;j++)
    {
      printf("%d\t",mul[i][j]);
    }
    printf("\n");
  }
  return 0;
}
       
       
       
 




















